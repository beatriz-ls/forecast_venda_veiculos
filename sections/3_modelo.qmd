
##  {#mlp data-menu-title="Modelo MLP"}

[Modelo]{.slide-title}

[Multilayer Perception]{.custom-subtitle2}

<hr>

```{python}
#| label: mlp
#| echo: true
#| output: true
#| warning: false
#| message: false
#| 

model = MLPRegressor(hidden_layer_sizes=(64, 32), activation='relu',
                     solver='adam', random_state=42, max_iter=1000)
model.fit(X_train, y_train)

```

::: body-text-s

Cria um perceptron multicamada (MLP) com:

- Duas camadas ocultas, a primeira com 64 neurônios e a segunda com 32.
- Função de ativação ReLU.
- Otimizador Adam.
- Até 1000 iterações.

:::

```{python}
#| label: pred
#| echo: true
#| output: true
#| warning: false
#| message: false
#| 

y_pred_mlp = model.predict(X_test)

folds[2][1]
```

##  {#mlp_pred data-menu-title="Modelo MLP: Gráfico"}

[Modelo MLP]{.slide-title}

[Previsão]{.custom-subtitle2}

<hr>

```{python}
#| label: plot_pred
#| echo: false
#| output: true
#| warning: false
#| message: false

data_test = df.index[test_idx]

#plt.figure(figsize=(12, 6))
#plt.plot(data_test, y_test, label='Real', color='black')
#plt.plot(data_test, y_pred_mlp, label='MLP', color='blue')
#plt.title(f'Previsão de Unidades (MLP) - Fold {folds + 1}')
#plt.legend()
#plt.grid(True)
#plt.show()
```

##  {#mlp_pred_series data-menu-title="Modelo MLP: Gráfico de predição"}

[Modelo MLP]{.slide-title}

[Previsão na série temporal]{.custom-subtitle2}

<hr>

```{python}
#| label: plot_pred1
#| echo: false
#| output: true
#| warning: false
#| message: false

plt.figure(figsize=(12, 6))

# Série real completa (eixo x = índices inteiros da série)
plt.plot(np.arange(len(y)), y, label='Real', color='black')

# Previsão no fold 3 (test_idx são os índices absolutos na série)
plt.plot(test_idx, y_pred_mlp, label='Previsão MLP (fold 3)', color='blue')

plt.title('Previsão de Unidades (MLP) - Série Completa')
plt.legend()
plt.grid(True)
plt.show()
```



